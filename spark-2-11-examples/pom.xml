<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.spark.examples</groupId>
  <artifactId>spark-2-11-examples</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>spark-2-11-examples</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <scala-tool-version>2.11</scala-tool-version>
    <spark.version>2.3.0</spark.version>
  </properties>

  <dependencies>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    
     <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_${scala-tool-version}</artifactId>
            <version>${spark.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_${scala-tool-version}</artifactId>
            <version>${spark.version}</version>
        </dependency>

       <dependency>
		    <groupId>org.apache.spark</groupId>
		    <artifactId>spark-streaming_${scala-tool-version}</artifactId>
            <version>${spark.version}</version>
		</dependency>
		
		<!-- Spark Mlib -->
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-mllib_${scala-tool-version}</artifactId>
			<version>${spark.version}</version>
		</dependency>

		<!-- Spark Mlib linalg -->
		<dependency>
			<groupId>org.apache.spark</groupId>
			<artifactId>spark-mllib-local_${scala-tool-version}</artifactId>
			<version>${spark.version}</version>
		</dependency>
		
		<!-- jcommander is used for parsing arguments -->
		<dependency>
			<groupId>com.beust</groupId>
			<artifactId>jcommander</artifactId>
			<version>1.78</version>
		</dependency>
	
		<!-- scalaaj is used for Http client -->
		<dependency>
			<groupId>org.scalaj</groupId>
			<artifactId>scalaj-http_${scala-tool-version}</artifactId>
			<version>${spark.version}</version>
		</dependency>
		
		<!--  A simple web socket for scala right now using for slack procerssing  -->
		<dependency>
			<groupId>org.jfarcand</groupId>
			<artifactId>wcs</artifactId>
			<version>1.5</version>
		</dependency>
		
		<!-- Kafka Configuration -->
		<!-- https://mvnrepository.com/artifact/org.apache.spark/spark-streaming-kafka-0-10 -->
		<dependency>
		    <groupId>org.apache.spark</groupId>
		    <artifactId>spark-streaming-kafka-0-10_2.11</artifactId>
		    <version>2.3.0</version>
		</dependency>

		
		<!-- https://mvnrepository.com/artifact/org.apache.kafka/kafka -->
		<dependency>
		    <groupId>org.apache.kafka</groupId>
		    <artifactId>kafka_2.11</artifactId>
		    <version>0.10.1.0</version>
		</dependency>
				
		<!-- https://mvnrepository.com/artifact/org.apache.kafka/kafka-clients -->
		<dependency>
		    <groupId>org.apache.kafka</groupId>
		    <artifactId>kafka-clients</artifactId>
		    <version>0.10.2.2</version>
		</dependency>
		
		<!-- Kafka Configuration -->
		
		<!--  Twitter Configuration -->
		
		<!-- https://mvnrepository.com/artifact/org.twitter4j/twitter4j-core -->
		<dependency>
		    <groupId>org.twitter4j</groupId>
		    <artifactId>twitter4j-core</artifactId>
		    <version>4.0.4</version>
		</dependency>
		
		<!-- https://mvnrepository.com/artifact/org.twitter4j/twitter4j-stream -->
		<dependency>
		    <groupId>org.twitter4j</groupId>
		    <artifactId>twitter4j-stream</artifactId>
		    <version>4.0.4</version>
		</dependency>
			
		<!-- Used by populaHashTag for TwitterUtils -->	
		<!-- https://mvnrepository.com/artifact/org.apache.bahir/spark-streaming-twitter -->
		<dependency>
		    <groupId>org.apache.bahir</groupId>
		    <artifactId>spark-streaming-twitter_${scala-tool-version}</artifactId>
		    <version>${spark.version}</version>
		</dependency>
		
		
		<!--  Twitter Configuration -->	
		
		<!-- NLP Configuration -->
		
		<!-- https://mvnrepository.com/artifact/edu.stanford.nlp/stanford-corenlp -->
		<dependency>
		    <groupId>edu.stanford.nlp</groupId>
		    <artifactId>stanford-corenlp</artifactId>
		    <version>3.4</version>
		</dependency>
		<dependency>
	      <groupId>edu.stanford.nlp</groupId>
	      <artifactId>stanford-corenlp</artifactId>
	      <version>3.4</version>
	      <classifier>models</classifier>
	      
	    </dependency>
		<!-- NLP Configuration -->		
			
	 <dependency> <!-- Jetty demmo -->
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-client</artifactId>
      <version>8.1.14.v20131031</version>
    </dependency>
    
<!--     <dependency> -->
<!--       <groupId>com.fasterxml.jackson.core</groupId> -->
<!--       <artifactId>jackson-databind</artifactId> -->
<!--       <version>2.8.8</version> -->
<!--     </dependency> -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.5</version>
    </dependency>
    <!-- Open CSV -->
     <dependency>
      <groupId>net.sf.opencsv</groupId>
      <artifactId>opencsv</artifactId>
      <version>2.3</version>
    </dependency>
    
    <!--  Processing Excel -->
    <dependency>
	    <groupId>com.crealytics</groupId>
	    <artifactId>spark-excel_2.11</artifactId>
	    <version>0.12.0</version>
	</dependency>
    
    
    <!-- Processing JSON -->
    <dependency>
	    <groupId>com.typesafe.play</groupId>
	    <artifactId>play-json_2.11</artifactId>
	    <version>2.7.0-RC2</version>
	</dependency>
	
	<!-- Cassandra -->
	 <dependency> 
      <groupId>com.datastax.spark</groupId>
      <artifactId>spark-cassandra-connector_2.11</artifactId>
      <version>2.4.1</version>
    </dependency>
    <dependency> 
      <groupId>com.datastax.spark</groupId>
      <artifactId>spark-cassandra-connector-java_2.11</artifactId>
    <version>1.6.0-M1</version>
    </dependency>
    
    <!-- Cassandra -->
    
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <build>
  
  
 <plugins>
            
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.2</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                </configuration>
            </plugin>

            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>scala-compile-first</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>add-source</goal>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>scala-test-compile</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
  
  
</project>
